import java.util.*;

// Product class to represent individual products
class Product {
    private int id;
    private String name;
    private double price;
    private int quantity;

    public Product(int id, String name, double price, int quantity) {
        this.id = id;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }

    // Getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }
}

// ShoppingCart class to represent a user's shopping cart
class ShoppingCart {
    private Map<Product, Integer> items;

    public ShoppingCart() {
        items = new HashMap<>();
    }

    // Add product to the shopping cart
    public void addProduct(Product product, int quantity) {
        items.put(product, quantity);
    }

    // Remove product from the shopping cart
    public void removeProduct(Product product) {
        items.remove(product);
    }

    // Get all items in the shopping cart
    public Map<Product, Integer> getItems() {
        return items;
    }

    // Calculate total price of items in the shopping cart
    public double calculateTotal() {
        double total = 0;
        for (Map.Entry<Product, Integer> entry : items.entrySet()) {
            total += entry.getKey().getPrice() * entry.getValue();
        }
        return total;
    }
}

// ECommercePlatform class to manage products and shopping carts
class ECommercePlatform {
    private List<Product> products;

    public ECommercePlatform() {
        products = new ArrayList<>();
    }

    // Add product to the platform
    public void addProduct(Product product) {
        products.add(product);
    }

    // Display all products
    public void displayAllProducts() {
        System.out.println("Available Products:");
        for (Product product : products) {
            System.out.println("ID: " + product.getId() + ", Name: " + product.getName() + ", Price: $" + product.getPrice() + ", Quantity: " + product.getQuantity());
        }
    }
}

public class ECommercePlatformApp {
    public static void main(String[] args) {
        // Create e-commerce platform
        ECommercePlatform platform = new ECommercePlatform();

        // Add some products
        platform.addProduct(new Product(1, "Laptop", 999.99, 10));
        platform.addProduct(new Product(2, "Smartphone", 499.99, 20));
        platform.addProduct(new Product(3, "Headphones", 99.99, 30));

        // Display all products
        platform.displayAllProducts();

        // Sample shopping cart functionality
        ShoppingCart cart = new ShoppingCart();
        Product laptop = new Product(1, "Laptop", 999.99, 10);
        Product smartphone = new Product(2, "Smartphone", 499.99, 20);
        cart.addProduct(laptop, 2);
        cart.addProduct(smartphone, 1);

        // Display items in the shopping cart
        System.out.println("\nItems in the Shopping Cart:");
        for (Map.Entry<Product, Integer> entry : cart.getItems().entrySet()) {
            Product product = entry.getKey();
            int quantity = entry.getValue();
            System.out.println("Name: " + product.getName() + ", Quantity: " + quantity);
        }

        // Calculate total price of items in the shopping cart
        System.out.println("\nTotal Price: $" + cart.calculateTotal());
    }
}

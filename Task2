import java.util.*;

// Student class to represent individual students
class Student {
    private int id;
    private String name;
    private int age;
    private String department;

    public Student(int id, String name, int age, String department) {
        this.id = id;
        this.name = name;
        this.age = age;
        this.department = department;
    }

    // Getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getDepartment() {
        return department;
    }

    public void setDepartment(String department) {
        this.department = department;
    }
}

// Student Information System class to manage students
class StudentInformationSystem {
    private List<Student> students;

    public StudentInformationSystem() {
        students = new ArrayList<>();
    }

    // Add student to the system
    public void addStudent(Student student) {
        students.add(student);
    }

    // Display all students
    public void displayAllStudents() {
        System.out.println("All Students:");
        for (Student student : students) {
            System.out.println("ID: " + student.getId() + ", Name: " + student.getName() + ", Age: " + student.getAge() + ", Department: " + student.getDepartment());
        }
    }

    // Search for a student by ID
    public Student searchStudentById(int id) {
        for (Student student : students) {
            if (student.getId() == id) {
                return student;
            }
        }
        return null;
    }
}

public class StudentInformationSystemApp {
    public static void main(String[] args) {
        // Create student information system
        StudentInformationSystem sis = new StudentInformationSystem();

        // Add some students
        sis.addStudent(new Student(1, "John Doe", 20, "Computer Science"));
        sis.addStudent(new Student(2, "Jane Smith", 21, "Electrical Engineering"));

        // Display all students
        sis.displayAllStudents();

        // Search for a student by ID
        int searchId = 1;
        Student foundStudent = sis.searchStudentById(searchId);
        if (foundStudent != null) {
            System.out.println("Student found - ID: " + foundStudent.getId() + ", Name: " + foundStudent.getName() + ", Age: " + foundStudent.getAge() + ", Department: " + foundStudent.getDepartment());
        } else {
            System.out.println("Student with ID " + searchId + " not found.");
        }
    }
}
